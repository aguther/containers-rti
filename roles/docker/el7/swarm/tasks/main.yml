---
- name: "ansible : install docker-py"
  yum:
    name: python-docker-py
    state: latest

- name: "docker : add options"
  replace:
    dest: /etc/sysconfig/docker
    regexp: "(^OPTIONS=').*(')$"
    replace: "\\1--selinux-enabled --log-driver=journald -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock\\2"

- name: "docker: reset id"
  file:
    path: /etc/docker/key.json
    state: absent

- name: "docker : restart service"
  service:
    name: docker.service
    state: restarted

- name: pull images
  docker_image:
    name: "{{ item }}"
  with_items:
    - swarm
    - progrium/consul
    - gliderlabs/registrator

- name: "consul : create data directory"
  file:
    path: /var/lib/consul
    state: directory

- name: "consul : run"
  docker_container:
    name: consul
    image: progrium/consul
    hostname: consul
    command: "-server -advertise {{ docker_swarm_host_ipv4_address }} -client 0.0.0.0 -bootstrap -ui-dir /ui"
    state: started
    restart_policy: always
    recreate: yes
    ports:
      - "{{ docker_swarm_host_ipv4_address }}:8300:8300"
      - "{{ docker_swarm_host_ipv4_address }}:8301:8301"
      - "{{ docker_swarm_host_ipv4_address }}:8301:8301/udp"
      - "{{ docker_swarm_host_ipv4_address }}:8302:8302"
      - "{{ docker_swarm_host_ipv4_address }}:8302:8302/udp"
      - "{{ docker_swarm_host_ipv4_address }}:8400:8400"
      - "{{ docker_swarm_host_ipv4_address }}:8500:8500"
      - "{{ docker_swarm_host_ipv4_address }}:53:53/udp"
    volumes:
      - "/var/lib/consul:/data"
  when: inventory_hostname in groups['master']

- name: "registrar : run"
  docker_container:
    name: registrar
    image: gliderlabs/registrator
    hostname: registrar
    command: "consul://{{ docker_swarm_host_ipv4_address }}:8500"
    state: started
    restart_policy: always
    recreate: yes
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock"
  when: inventory_hostname in groups['master']

- name: "swarm : run agent"
  docker_container:
    name: sagent
    image: swarm
    hostname: sagent
    command: "join -advertise={{ docker_swarm_host_ipv4_address }}:2375 consul://{{ docker_swarm_master_ipv4_address }}:8500"
    state: started
    restart_policy: always
    recreate: yes

- name: "swarm : ensure manager only on master"
  docker_container:
    name: smanager
    image: swarm
    state: absent
  when: inventory_hostname in groups['nodes']

- name: "swarm : run manager"
  docker_container:
    name: smanager
    image: swarm
    hostname: smanager
    command: "manage consul://{{ docker_swarm_host_ipv4_address }}:8500"
    state: started
    restart_policy: always
    recreate: yes
    ports:
      - "2400:2375"
  when: inventory_hostname in groups['master']
